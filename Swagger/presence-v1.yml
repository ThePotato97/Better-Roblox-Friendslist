openapi: 3.0.1
info:
  title: Presence Api v1
  version: v1
servers:
- url: https://presence.roblox.com/
paths:
  /v1/presence/last-online:
    post:
      tags:
      - Presence
      summary: Get last online timestamps for a list of users.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roblox.Presence.Api.Models.Request.LastOnlineRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Roblox.Presence.Api.Models.Request.LastOnlineRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roblox.Presence.Api.Models.Response.LastOnlineResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Roblox.Presence.Api.Models.Response.LastOnlineResponse'
      x-codegen-request-body-name: lastOnlineRequest
  /v1/presence/register-app-presence:
    post:
      tags:
      - Presence
      summary: Register User Presence for IOS, Android, Xbox, regular studio session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roblox.Presence.Api.Models.Request.RegisterAppPresenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Roblox.Presence.Api.Models.Request.RegisterAppPresenceRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roblox.Web.WebAPI.ApiEmptyResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Roblox.Web.WebAPI.ApiEmptyResponseModel'
        401:
          description: '0: Authorization has been denied for this request.'
          content: {}
        403:
          description: '0: Token Validation Failed'
          content: {}
      x-codegen-request-body-name: registerAppPresenceRequest
  /v1/presence/users:
    post:
      tags:
      - Presence
      summary: Get Presence for a list of users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roblox.Presence.Api.Models.Request.UserPresenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Roblox.Presence.Api.Models.Request.UserPresenceRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roblox.Presence.Api.Models.Response.UserPresencesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Roblox.Presence.Api.Models.Response.UserPresencesResponse'
      x-codegen-request-body-name: userPresenceRequest
components:
  schemas:
    Roblox.Presence.Api.Models.Request.LastOnlineRequest:
      type: object
      properties:
        userIds:
          type: array
          description: list of userIds to get last online data for.
          items:
            type: integer
            format: int64
      description: Get last online timestamps request model
    Roblox.Presence.Api.Models.Request.RegisterAppPresenceRequest:
      type: object
      properties:
        location:
          type: string
          description: Gets or sets location
        placeId:
          type: integer
          description: Gets or sets placeId
          format: int64
        disconnect:
          type: boolean
          description: Gets or sets if session was disconnected or not
      description: Request model to Register App Presence
    Roblox.Presence.Api.Models.Request.UserPresenceRequest:
      type: object
      properties:
        userIds:
          type: array
          description: list of userIds to get presence for
          items:
            type: integer
            format: int64
      description: Get users presences request model
    Roblox.Presence.Api.Models.Response.LastOnline:
      type: object
      properties:
        userId:
          type: integer
          description: user Id
          format: int64
        lastOnline:
          type: string
          description: Last seen datetime
          format: date-time
      description: Last online data for given user id.
    Roblox.Presence.Api.Models.Response.LastOnlineResponse:
      type: object
      properties:
        lastOnlineTimestamps:
          type: array
          description: List of last online timestamps.
          items:
            $ref: '#/components/schemas/Roblox.Presence.Api.Models.Response.LastOnline'
      description: Last online endpoint response model.
    Roblox.Presence.Api.Models.Response.UserPresence:
      type: object
      properties:
        userPresenceType:
          type: integer
          description: User presence Type ['Offline' = 0, 'Online' = 1, 'InGame' =
            2, 'InStudio' = 3]
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
        lastLocation:
          type: string
          description: user's last location
        placeId:
          type: integer
          description: place Id
          format: int64
        rootPlaceId:
          type: integer
          description: Root place Id
          format: int64
        gameId:
          type: string
          description: game Id
          format: uuid
        universeId:
          type: integer
          description: universe Id
          format: int64
        userId:
          type: integer
          description: user Id
          format: int64
        lastOnline:
          type: string
          description: last seen. Roblox.Time.UtcInstant
          format: date-time
      description: ""
    Roblox.Presence.Api.Models.Response.UserPresencesResponse:
      type: object
      properties:
        userPresences:
          type: array
          description: A collection of User Presences
          items:
            $ref: '#/components/schemas/Roblox.Presence.Api.Models.Response.UserPresence'
      description: User Presences Response model
    Roblox.Web.WebAPI.ApiEmptyResponseModel:
      type: object
